#spring.datasource.driver-class-name =com.mysql.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.datasource.url=jdbc:mysql://localhost:3306/tp-userservice

spring.datasource.username=root
spring.datasource.password=rootroot


spring.cloud.config.uri=http://localhost:8888
management.endpoints.web.exposure.include=*


spring.application.name = user-service

# Dynamically assign the port number by eureka server
server.port=0

# Can be set to false to disable security during local development
rest.security.enabled=true
rest.security.api-matcher=/api/**
rest.security.cors.allowed-origins=*
rest.security.cors.allowed-headers=*
rest.security.cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS
rest.security.cors.max-age=3600
spring.main.allow-bean-definition-overriding=true

# If there are more than one instance of service, uniquely identify them
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

# Keycloak config
rest.security.issuer-uri=http://localhost:8180/auth/realms/training-platform-realm
keycloak.realm = training-platform-realm
keycloak.auth-server-url = http://localhost:8180/auth
keycloak.ssl-required = external
keycloak.resource = tp-spring-cloud-gateway-client
keycloak.credentials.secret = 38e79dcd-942b-448e-a7cc-07e503b06e59
keycloak.use-resource-role-mappings = true
keycloak.bearer-only=true
security.oauth2.client.access-token-uri=${rest.security.issuer-uri}/protocol/openid-connect/token
security.oauth2.client.scope=openid
security.oauth2.client.grant-type=password
