spring.application.name=api-gateway
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true
spring.cloud.loadbalancer.ribbon.enabled=false
spring.main.allow-bean-definition-overriding=true
spring.cloud.gateway.default-filters=TokenRelay
server.port=8081

# Config for streaming service
# spring.cloud.gateway.routes[0].id=streaming-service
# spring.cloud.gateway.routes[0].uri=lb://streaming-service
# spring.cloud.
# gateway.routes[0].predicates[0]= Path=/api/streaming/**

# Jwt config
jwt.header=Authorization
jwt.secret=BEN_bu_DUNYADAN_degilim_EVLADIM___?_&/%&/%+%=?=?)=?)=?)(Y&/R%%

# If there are more than one instance of service, uniquely identify them
eureka.instance.instance-id=${spring.application.name}:${random.uuid}
# Keycloak config
spring.security.oauth2.client.provider.keycloak.issuer-uri=http://localhost:8180/auth/realms/training-platform-realm
spring.security.oauth2.client.provider.keycloak.jwk-set-uri=http://localhost:8180/auth/realms/training-platform-realm/protocol/openid-connect/certs
spring.security.oauth2.client.provider.keycloak.token-uri=http://localhost:8180/auth/realms/training-platform-realm/protocol/openid-connect/token
spring.security.oauth2.client.provider.keycloak.user-name-attribute=preferred_username
spring.security.oauth2.client.provider.keycloak.user-info-authentication-method=header
spring.security.oauth2.client.provider.keycloak.authorization-uri=http://localhost:8180/auth/realms/training-platform-realm/protocol/openid-connect/auth
spring.security.oauth2.client.provider.keycloak.user-info-uri=http://localhost:8180/auth/realms/training-platform-realm/protocol/openid-connect/userinfo

spring.security.oauth2.client.registration.tp-spring-cloud-gateway-client.client-id=tp-spring-cloud-gateway-client
spring.security.oauth2.client.registration.tp-spring-cloud-gateway-client.client-secret=38e79dcd-942b-448e-a7cc-07e503b06e59
spring.security.oauth2.client.registration.tp-spring-cloud-gateway-client.provider=keycloak
spring.security.oauth2.client.registration.tp-spring-cloud-gateway-client.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.tp-spring-cloud-gateway-client.redirect-uri=http://localhost:8081/login/oauth2/code/tp-spring-cloud-gateway-client
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8180/auth/realms/training-platform-realm/protocol/openid-connect/certs